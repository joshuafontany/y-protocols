{"version":3,"file":"auth.cjs","sources":["../auth.js"],"sourcesContent":["\nimport * as Y from 'yjs' // eslint-disable-line\nimport * as encoding from 'lib0/encoding'\nimport * as decoding from 'lib0/decoding'\n\nexport const messagePermissionDenied = 0\nexport const messagePermissionApproved = 1\nexport const messagePermissionRequested = 2\n\n/**\n * @param {encoding.Encoder} encoder\n * @param {string} reason\n */\nexport const writePermissionDenied = (encoder, reason) => {\n  encoding.writeVarUint(encoder, messagePermissionDenied)\n  encoding.writeVarString(encoder, reason)\n}\n\n/**\n * @param {encoding.Encoder} encoder\n * @param {string} status // string or string encoded json status\n */\nexport const writePermissionApproved = (encoder, status) => {\n  encoding.writeVarUint(encoder, messagePermissionApproved)\n  encoding.writeVarString(encoder, status)\n}\n\n/**\n * @param {encoding.Encoder} encoder\n * @param {string} token // string or string encoded json token\n */\nexport const writePermissionRequested = (encoder, token) => {\n  encoding.writeVarUint(encoder, messagePermissionRequested)\n  encoding.writeVarString(encoder, token)\n}\n\n/**\n * @callback PermissionDeniedHandler\n * @param {any} y\n * @param {string} reason\n */\n\n/**\n * @callback PermissionApprovedHandler\n * @param {any} y\n * @param {string} reason\n */\n\n/**\n * @callback PermissionRequestedHandler\n * @param {any} y\n * @param {string} token\n * @returns {boolean} // authorized, required\n */\n\n/**\n *\n * @param {decoding.Decoder} decoder\n * @param {Y.Doc} y\n * @param {PermissionDeniedHandler} permissionDeniedHandler\n * @param {PermissionApprovedHandler} permissionApprovedHandler\n */\nexport const readAuthMessage = (decoder, y, permissionDeniedHandler, permissionApprovedHandler) => {\n  switch (decoding.readVarUint(decoder)) {\n    case messagePermissionDenied: permissionDeniedHandler(y, decoding.readVarString(decoder))\n    case messagePermissionApproved: permissionApprovedHandler(y, decoding.readVarString(decoder))\n  }\n}\n\n/**\n *\n * @param {decoding.Decoder} decoder\n * @param {Y.Doc} y\n * @param {PermissionRequestedHandler} permissionRequestedHandler\n */\n export const verifyAuthMessage = (decoder, y, permissionRequestedHandler) => {\n  switch (decoding.readVarUint(decoder)) {\n    case messagePermissionRequested: return permissionRequestedHandler(y, decoding.readVarString(decoder))\n  }\n}\n\n\n"],"names":["encoding","decoding"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKY,MAAC,uBAAuB,GAAG,EAAC;AAC5B,MAAC,yBAAyB,GAAG,EAAC;AAC9B,MAAC,0BAA0B,GAAG,EAAC;AAC3C;AACA;AACA;AACA;AACA;AACY,MAAC,qBAAqB,GAAG,CAAC,OAAO,EAAE,MAAM,KAAK;AAC1D,EAAEA,mBAAQ,CAAC,YAAY,CAAC,OAAO,EAAE,uBAAuB,EAAC;AACzD,EAAEA,mBAAQ,CAAC,cAAc,CAAC,OAAO,EAAE,MAAM,EAAC;AAC1C,EAAC;AACD;AACA;AACA;AACA;AACA;AACY,MAAC,uBAAuB,GAAG,CAAC,OAAO,EAAE,MAAM,KAAK;AAC5D,EAAEA,mBAAQ,CAAC,YAAY,CAAC,OAAO,EAAE,yBAAyB,EAAC;AAC3D,EAAEA,mBAAQ,CAAC,cAAc,CAAC,OAAO,EAAE,MAAM,EAAC;AAC1C,EAAC;AACD;AACA;AACA;AACA;AACA;AACY,MAAC,wBAAwB,GAAG,CAAC,OAAO,EAAE,KAAK,KAAK;AAC5D,EAAEA,mBAAQ,CAAC,YAAY,CAAC,OAAO,EAAE,0BAA0B,EAAC;AAC5D,EAAEA,mBAAQ,CAAC,cAAc,CAAC,OAAO,EAAE,KAAK,EAAC;AACzC,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,eAAe,GAAG,CAAC,OAAO,EAAE,CAAC,EAAE,uBAAuB,EAAE,yBAAyB,KAAK;AACnG,EAAE,QAAQC,mBAAQ,CAAC,WAAW,CAAC,OAAO,CAAC;AACvC,IAAI,KAAK,uBAAuB,EAAE,uBAAuB,CAAC,CAAC,EAAEA,mBAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,EAAC;AAC7F,IAAI,KAAK,yBAAyB,EAAE,yBAAyB,CAAC,CAAC,EAAEA,mBAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,EAAC;AACjG,GAAG;AACH,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAa,MAAC,iBAAiB,GAAG,CAAC,OAAO,EAAE,CAAC,EAAE,0BAA0B,KAAK;AAC9E,EAAE,QAAQA,mBAAQ,CAAC,WAAW,CAAC,OAAO,CAAC;AACvC,IAAI,KAAK,0BAA0B,EAAE,OAAO,0BAA0B,CAAC,CAAC,EAAEA,mBAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;AAC1G,GAAG;AACH;;;;;;;;;;;"}